# create table for Students
CREATE TABLE Students(
    username varchar(255) NOT NULL PRIMARY KEY,
    fname varchar(255) NOT NULL,
    lname varchar(255) NOT NULL,
    mname varchar(255) NOT NULL,
    email varchar(255) UNIQUE NOT NULL,
    userid varchar(255) NOT NULL,
    course varchar(255) NOT NULL,
    _password LONGTEXT NOT NULL,
    bdate DATETIME NOT NULL,
    address varchar(255),
    gender varchar(20),
    profilePicture LONGBLOB
);

INSERT INTO Students (username, fname, lname, mname, email, userid, course, _password, bdate, address, gender) VALUES (
    'atangan',
    'judy an',
    'tangan',
    's',
    'zxtangan@sbca.edu.ph',
    'userid01',
    'bsit',
    '12345678',
    '2000-11-10 16:38:34',
    'home address',
    'female'
);

# create table for Teachers
CREATE TABLE Teachers(
    username varchar(255) NOT NULL PRIMARY KEY,
    fname varchar(255) NOT NULL,
    lname varchar(255) NOT NULL,
    mname varchar(255) NOT NULL,
    email varchar(255) UNIQUE NOT NULL,
    userid varchar(255) NOT NULL,
    _password LONGTEXT NOT NULL,
    bdate DATETIME NOT NULL,
    address varchar(255),
    gender varchar(20),
    profession varchar(255),
    profilePicture LONGBLOB
);

INSERT INTO Teachers (username, fname, lname, mname, email, userid, _password, bdate, address, gender, profession) VALUES (
    'tstark',
    'tony',
    'stark',
    's',
    'tstark@sbca.edu.ph',
    'userid01',
    '12345678',
    '2000-11-10 16:38:34',
    'home address',
    'male',
    'IT Professor'
);

# create table for Admin
CREATE TABLE Admin(
    username varchar(255) NOT NULL PRIMARY KEY,
    name varchar(255) NOT NULL,
    email varchar(255) UNIQUE NOT NULL,
    _password LONGTEXT NOT NULL,
    address varchar(255),
);

INSERT INTO Admin(username, name, email, _password, address) VALUES (
    'sbcaeduph',
    'st. bernadette college of alabang',
    'sbca@edu.ph',
    'sbca12345',
    'sbcaaddress'
);

# subjects
CREATE TABLE Subjects(
    subId INT AUTO_INCREMENT PRIMARY KEY,
    name varchar(255) NOT NULL,                 # name of the subject
    _year int(1) NOT NULL,                      # for what year 
    semester int(1) NOT NULL,                   # for what semester
    Major int(1) NOT NULL,                      # major, 0=false, 1=true
    username varchar(255) NOT NULL,             # teacher's username

    FOREIGN KEY (username) REFERENCES Teachers(username)
);

# create a new subject 
INSERT INTO Subjects(name, _year, semester, Major, username) VALUES (
    'Intro to Programming',
    1,
    1,
    1,
    'tstark'
);

# semester
CREATE TABLE Semester(
    semester int(1) NOT NULL AUTO_INCREMENT,
    schoolyear varchar(255) NOT NULL,
    semID varchar(255) PRIMARY KEY,
    current int(1) NOT NULL # 0 - not, 1 - yes
);

INSERT INTO semester (semester, schoolyear, semID, current) VALUES (
    1,
    '2023-2024',
    '1sem2023-2024',
    1
);

CREATE TABLE todo_admin(
    todoid int(11) AUTO_INCREMENT NOT NULL PRIMARY KEY,
    username varchar(255) NOT NULL,
    name varchar(255) NOT NULL,
    checked int(1) NOT NULL,

    FOREIGN KEY (username) REFERENCES Admin(username)
);

INSERT INTO todo_admin(todoid, username, name, checked) VALUES (
    'sbcaeduph',
    'eat your vegies',
    0
);

# courses

CREATE TABLE Course(
    code varchar(255) PRIMARY KEY,
    name varchar(255) NOT NULL,
    _year int(1) NOT NULL
);

INSERT INTO Course (code, name, _year) VALUES (
    'bsit3',
    'BS Information Technology',
    3
);

# student grade
CREATE TABLE grades(
    gradeID INT AUTO_INCREMENT PRIMARY KEY,
    subjectId INT NOT NULL, # subject's id or code
    username varchar(255) NOT NULL, # student's user id
    totalGrade DECIMAL(2, 2) NOT NULL,

    FOREIGN KEY (username) REFERENCES students(username),
    FOREIGN KEY (subjectId) REFERENCES Subjects(subId)
);

INSERT INTO grades(subjectId, username, totalGrade) VALUES (
    1,
    'cvaydal',
    0
);

table for School Year
CREATE TABLE SchoolYear(
    SY_ID VARCHAR(255) NOT NULL PRIMARY KEY,
    START_DATE DATETIME NOT NULL,
    END_DATE DATETIME NOT NULL,
    EXTEND_DATE DATETIME NOT NULL,
    NUM_ENROLLED INT(11),
    OPEN INT(1),
    CURRENT INT(1),
);

table for Enrolled Students
CREATE TABLE Enrolled_Students(
    SSY_ID VARCHAR(225) PRIMARY KEY NOT NULL,
    S_ID VARCHAR(225) NOT NULL,
    SY_ID VARCHAR(255) NOT NULL,
    SEMESTER_LEVEl INT(1) NOT NULL,
    TOTAL_GPA INT(1) NOT NULL,
    LEVEL INT(1) NOT NULL,

    FOREIGN KEY (S_ID) REFERENCES Students(username),
    FOREIGN KEY (SY_ID) REFERENCES SchoolYear(SY_ID)
);

# chat or messages database - UNUSED
CREATE TABLE std_messages (
    msgID INT(11) PRIMARY KEY,
    sender varchar(255) NOT NULL,
    receiver varchar(255) NOT NULL,
    datesend DATETIME NOT NULL,
    messagebody VARCHAR(255),
    messagesubject VARCHAR(255),
    priority INT(1) NOT NULL,

    FOREIGN KEY (sender) REFERENCES Students(username),
    FOREIGN key (receiver) REFERENCES Students(username)
);

# chat or messages database - USED
CREATE TABLE std_messages ( # students
    msgID INT(11) PRIMARY KEY AUTO_INCREMENT,
    sender varchar(255) NOT NULL,       # fk
    res_type int(1) NOT NULL,           # type of user, 0 = student, 1 = faculty, 2 = admin
    receiver varchar(255) NOT NULL,     # receiver not fk
    datesend DATETIME NOT NULL,         # date when message sent
    messagebody VARCHAR(255),           # body of the message 
    messagesubject VARCHAR(255),        # subject of the message

    FOREIGN KEY (sender) REFERENCES students(username) # for students
);

CREATE TABLE flty_messages ( # teacher(faculty)
    msgID INT(11) PRIMARY KEY AUTO_INCREMENT,
    sender varchar(255) NOT NULL,       # fk
    res_type int(1) NOT NULL,           # type of user, 0 = student, 1 = faculty, 2 = admin
    receiver varchar(255) NOT NULL,     # receiver not fk
    datesend DATETIME NOT NULL,         # date when message sent
    messagebody VARCHAR(255),           # body of the message 
    messagesubject VARCHAR(255),        # subject of the message

    FOREIGN KEY (sender) REFERENCES teachers(username) # for teachers(faculty)
);

CREATE TABLE admin_messages ( # admin(sbca)
    msgID INT(11) PRIMARY KEY AUTO_INCREMENT,
    sender varchar(255) NOT NULL,       # fk
    res_type int(1) NOT NULL,           # type of user, 0 = student, 1 = faculty, 2 = admin
    receiver varchar(255) NOT NULL,     # receiver not fk
    datesend DATETIME NOT NULL,         # date when message sent
    messagebody VARCHAR(255),           # body of the message 
    messagesubject VARCHAR(255),        # subject of the message

    FOREIGN KEY (sender) REFERENCES sbca(username) # for admin(sbca)
);

# new message - student (example)
INSERT INTO messages(sender, receiver, res_type, datesend, messagebody, messagesubject) VALUES (
    'cvaydal',
    'sbcaeduph',
    0,
    '2024-09-15 14:30:00',
    'hello world',
    'message subject'
);

// balance of student (tution fee)
CREATE TABLE account (
    b_id INT PRIMARY KEY AUTO_INCREMENT,
    student VARCHAR(255) NOT NULL,
    assessment INT NOT NULL,
    balance INT NOT NULL,
    num_units INT NOT NULL,

    FOREIGN KEY (student) REFERENCES Enrolled_Students(S_ID)
);

- add new account if student is enrolled

// css
:root{
    ---sbca: #ff6666;
    ---sbca2: #FD4848;
    ---sbca3: #ba1111;
    ---maincolor: #3F3F3F;
    ---tableHeader: #3F3F3F;
    ---gray: #A5A5A5;
    ---line: #9b9a9a59;
    ---white: #fff;
    ---selected_color: #fff;
    ---shadow: #c4c4c4;
    ---shadow2: #2e2e2e;
    ---hover: #e3e3e3;
    ---hover2: #ebeaea48;
    ---hover3: #c4c4c45d;
    ---acc_bg: #b9b1fd15;
    ---list_hover: #e2e2e238;
    ---tab_hover: #dbdbdb5d;
    ---practice: #f0f0f0ec;
    ---open_popup: rgba(66, 66, 66, 0.589);
}